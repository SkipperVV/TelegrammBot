'''–í—Å–µ –≤–∏–¥—ã –º–µ—Å–∞–¥–∂–µ–π –∑–¥–µ—Å—å: https://core.telegram.org/bots/api#message'''
import emoji
import telebot

from config import currency, TOKEN
from extensions import ConversionException, CryptoConverter

bot = telebot.TeleBot(TOKEN)
emo = emoji.emojize


@bot.message_handler(commands=['help', 'start'])
def help(message: telebot.types.Message):
    text = '–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É:\n<–∏–º—è –≤–∞–ª—é—Ç—ã>\n<–≤ –∫–∞–∫—É—é –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>\n<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>\n' \
           '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞–ª—é—Ç—ã: /values\n' \
           '---------------------------------\n–ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç:\n' \
           '/btc_to_usd\n/euro_to_rub\n/usd_to_euro\n/usd_to_rub'
    bot.reply_to(message, text)


@bot.message_handler(commands=['btc_to_usd','euro_to_rub','usd_to_euro','usd_to_rub'])
def quick_rate(message: telebot.types.Message):
    values = []
    if message.text == '/btc_to_usd':
        values = ['btc', 'usd', '1']
    elif message.text == '/euro_to_rub':
        values = ['euro', 'rub', '1']
    elif message.text == '/usd_to_euro':
        values = ['usd', 'euro', '1']
    elif message.text == '/usd_to_rub':
        values = ['usd', 'rub', '1']
    text = CryptoConverter.get_rate(values)
    print(text)
    bot.reply_to(message, text)


@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n'
    for cur in currency.keys():
        text += cur + '\n'
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text', ])
def convert(message: telebot.types.Message):
    try:
        values = message.text.split(' ')
        if len(values) > 3:
            raise ConversionException(emo('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ü§®'))
        elif len(values) < 2:
            raise ConversionException(emo('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ü§∑‚Äç‚ôÄÔ∏è'))
        elif len(values) == 2:
            values.append('1')

        base, quote, amount = values
        amount_float = float(amount)
        rate = CryptoConverter.convert(values)
        convertion_result = round((amount_float * rate), 2)
    except ConversionException as e:
        bot.reply_to(message, e)
    except Exception as e:
        bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å\n{e}')
    else:
        text = emo(
            f'–ö—É—Ä—Å {base} –∫ {quote} = {rate}\n –î–ª—è –ø–æ–∫—É–ø–∫–∏ {amount_float} {base} –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è {convertion_result} {quote}     ü§î')
        print(text)
        bot.send_message(message.chat.id, text)


print(emo('Bot started>>>>>>>>>>>>:thumbs_up:'))

bot.polling()
